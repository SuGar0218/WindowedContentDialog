<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="SuGarToolkit.Sample.Dialogs.Views.ExamplePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:SuGarToolkit.Sample.Dialogs.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Loaded="Page_Loaded"
    mc:Ignorable="d">

    <Page.Resources>
        <Thickness x:Key="ExpanderHeaderPadding">16</Thickness>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel
            x:Name="TitleBarExtraButtonsArea"
            Grid.Row="0"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Width="48"
                VerticalAlignment="Stretch"
                Background="Transparent"
                BorderThickness="0"
                Click="ThemeToggleButton_Click"
                CornerRadius="0">
                <FontIcon FontSize="16" Glyph="&#xE793;" />
            </Button>
        </StackPanel>

        <Grid Grid.Row="1" RowSpacing="24">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                Margin="24,0"
                Spacing="8">
                <TextBlock Style="{ThemeResource TitleTextBlockStyle}" Text="窗口化的 ContentDialog" />
                <TextBlock Text="支持类似 WPF 中的 MessageBox 和类似 WinUI 3 中的 ContentDialog 两者调用方式。" TextWrapping="Wrap" />
            </StackPanel>

            <ScrollViewer Grid.Row="1">
                <StackPanel Margin="24,0,24,36" Spacing="24">
                    <StackPanel.Resources>
                        <Style TargetType="Expander">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="ExpandDirection" Value="Down" />
                            <Setter Property="Transitions">
                                <Setter.Value>
                                    <TransitionCollection>
                                        <RepositionThemeTransition />
                                    </TransitionCollection>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>

                    <Expander>
                        <Expander.Header>
                            <StackPanel
                                Margin="0,16"
                                Orientation="Horizontal"
                                Spacing="8">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <DropDownButton
                                        Grid.Column="1"
                                        MinWidth="0"
                                        Margin="-10,0,0,0"
                                        VerticalAlignment="Stretch">
                                        <DropDownButton.Flyout>
                                            <MenuFlyout Placement="Bottom">
                                                <MenuFlyoutItem Click="{x:Bind ShowMessageBox}" Text="WindowedMessageBox" />
                                                <MenuFlyoutItem Click="{x:Bind ShowInWindowMessageBox}" Text="InWindowMessageBox" />
                                            </MenuFlyout>
                                        </DropDownButton.Flyout>
                                    </DropDownButton>
                                    <Button
                                        Grid.Column="0"
                                        Click="{x:Bind ShowMessageBox}"
                                        Content="MessageBox"
                                        Style="{ThemeResource AccentButtonStyle}" />
                                </Grid>
                                <TextBlock
                                    x:Name="MessageBoxResultBox"
                                    VerticalAlignment="Center"
                                    x:FieldModifier="private" />
                            </StackPanel>
                        </Expander.Header>

                        <StackPanel Spacing="12">
                            <TextBox
                                AcceptsReturn="True"
                                Header="标题"
                                Text="{x:Bind messageBoxViewModel.Title, Mode=TwoWay}"
                                TextWrapping="Wrap" />
                            <TextBox
                                AcceptsReturn="True"
                                Header="内容"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                Text="{x:Bind messageBoxViewModel.Content, Mode=TwoWay}"
                                TextWrapping="Wrap" />
                            <ComboBox
                                Header="按扭组合"
                                ItemsSource="{x:Bind messageBoxButtons}"
                                SelectedItem="{x:Bind messageBoxViewModel.Buttons, Mode=TwoWay}" />
                            <ComboBox
                                Header="默认按钮"
                                ItemsSource="{x:Bind messageBoxDefaultButtons}"
                                SelectedItem="{x:Bind messageBoxViewModel.DefaultButton, Mode=TwoWay}" />
                            <ComboBox
                                Header="图标"
                                ItemsSource="{x:Bind messageBoxImages}"
                                SelectedItem="{x:Bind messageBoxViewModel.Image, Mode=TwoWay}" />
                            <ComboBox
                                Header="材质"
                                ItemsSource="{x:Bind local:ExamplePage.systemBackdropTypes}"
                                SelectedItem="{x:Bind messageBoxViewModel.BackdropType, Mode=TwoWay}" />
                            <ComboBox
                                Header="父窗口叠层"
                                ItemsSource="{x:Bind local:ExamplePage.behindOverlayTypes}"
                                SelectedItem="{x:Bind messageBoxViewModel.SmokeLayerKind, Mode=TwoWay}" />
                            <StackPanel Spacing="8">
                                <CheckBox Content="显示标题栏" IsChecked="{x:Bind messageBoxViewModel.IsTitleBarVisible, Mode=TwoWay}" />
                                <CheckBox Content="以此为父窗口" IsChecked="{x:Bind messageBoxViewModel.IsChild, Mode=TwoWay}" />
                                <CheckBox Content="模态窗口（无父窗口时无效）" IsChecked="{x:Bind messageBoxViewModel.IsModal, Mode=TwoWay}" />
                                <CheckBox Content="禁用父窗口（无父窗口时无效）" IsChecked="{x:Bind messageBoxViewModel.DisableBehind, Mode=TwoWay}" />
                            </StackPanel>
                        </StackPanel>
                    </Expander>

                    <Expander>
                        <Expander.Header>
                            <StackPanel
                                Margin="0,16"
                                Orientation="Horizontal"
                                Spacing="8">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <DropDownButton
                                        Grid.Column="1"
                                        MinWidth="0"
                                        Margin="-10,0,0,0"
                                        VerticalAlignment="Stretch">
                                        <DropDownButton.Flyout>
                                            <MenuFlyout Placement="Bottom">
                                                <MenuFlyoutItem Click="{x:Bind ShowWindowedContentDialog}" Text="WindowedContentDialog" />
                                                <MenuFlyoutItem Click="{x:Bind ShowInWindowContentDialog}" Text="InWindowContentDialog" />
                                            </MenuFlyout>
                                        </DropDownButton.Flyout>
                                    </DropDownButton>
                                    <Button
                                        Grid.Column="0"
                                        Click="{x:Bind ShowWindowedContentDialog}"
                                        Content="WindowedContentDialog"
                                        Style="{ThemeResource AccentButtonStyle}" />
                                </Grid>
                                <TextBlock
                                    x:Name="ContentDialogResultBox"
                                    VerticalAlignment="Center"
                                    x:FieldModifier="private" />
                            </StackPanel>
                        </Expander.Header>

                        <StackPanel Spacing="12">
                            <TextBox
                                AcceptsReturn="True"
                                Header="标题"
                                Text="{x:Bind contentDialogViewModel.Title, Mode=TwoWay}"
                                TextWrapping="Wrap" />
                            <TextBox
                                AcceptsReturn="True"
                                Header="内容（为空时显示本示例提供的默认内容）"
                                Text="{x:Bind contentDialogViewModel.Message, Mode=TwoWay}"
                                TextWrapping="Wrap" />
                            <TextBox Header="PrimaryButtonText" Text="{x:Bind contentDialogViewModel.PrimaryButtonText, Mode=TwoWay}" />
                            <TextBox Header="SecondaryButtonText" Text="{x:Bind contentDialogViewModel.SecondaryButtonText, Mode=TwoWay}" />
                            <TextBox Header="CloseButtonText" Text="{x:Bind contentDialogViewModel.CloseButtonText, Mode=TwoWay}" />
                            <ComboBox
                                Header="默认按钮"
                                ItemsSource="{x:Bind contentDialogButtons}"
                                SelectedItem="{x:Bind contentDialogViewModel.DefaultButton, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="ContentDialogButton">
                                        <TextBlock Text="{x:Bind}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <ComboBox
                                Header="材质"
                                ItemsSource="{x:Bind local:ExamplePage.systemBackdropTypes}"
                                SelectedItem="{x:Bind contentDialogViewModel.BackdropType, Mode=TwoWay}" />
                            <ComboBox
                                Header="父窗口叠层"
                                ItemsSource="{x:Bind local:ExamplePage.behindOverlayTypes}"
                                SelectedItem="{x:Bind contentDialogViewModel.SmokeLayerKind, Mode=TwoWay}" />
                            <StackPanel Spacing="8">
                                <CheckBox Content="显示标题栏" IsChecked="{x:Bind contentDialogViewModel.IsTitleBarVisible, Mode=TwoWay}" />
                                <CheckBox Content="PrimaryButton 点击后关闭" IsChecked="{x:Bind contentDialogViewModel.ClickPrimaryButtonToClose, Mode=TwoWay}" />
                                <CheckBox Content="SecondaryButton 点击后关闭" IsChecked="{x:Bind contentDialogViewModel.ClickSecondaryButtonToClose, Mode=TwoWay}" />
                                <CheckBox Content="以此为父窗口" IsChecked="{x:Bind contentDialogViewModel.IsChild, Mode=TwoWay}" />
                                <CheckBox Content="模态窗口（无父窗口时无效）" IsChecked="{x:Bind contentDialogViewModel.IsModal, Mode=TwoWay}" />
                                <CheckBox Content="禁用父窗口（无父窗口时无效）" IsChecked="{x:Bind contentDialogViewModel.DisableBehind, Mode=TwoWay}" />
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>
